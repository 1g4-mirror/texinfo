<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops" xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:pls="http://www.w3.org/2005/01/pronunciation-lexicon" xmlns:ssml="http://www.w3.org/2001/10/synthesis" xmlns:svg="http://www.w3.org/2000/svg">
  <head>
    <title>Special named constants</title>
    <link rel="stylesheet" type="text/css" href="docbook-epub.css"/>
    <link rel="stylesheet" type="text/css" href="kawa.css"/>
    <script src="kawa-ebook.js" type="text/javascript"/>
    <meta name="generator" content="DocBook XSL-NS Stylesheets V1.79.1"/>
    <link rel="prev" href="Keywords.xhtml" title="Keywords"/>
    <link rel="next" href="Procedures.xhtml" title="Procedures"/>
  </head>
  <body>
    <header/>
    <section class="sect1" title="Special named constants" epub:type="subchapter" id="Special-named-constants">
      <div class="titlepage">
        <div>
          <div>
            <h2 class="title" style="clear: both">Special named constants</h2>
          </div>
        </div>
      </div>
      <p class="synopsis" kind="Constant"><span class="kind">Constant</span><span class="ignore">: </span><a id="idm139667877539648" class="indexterm"/> <code class="varname">#!optional</code></p>
      <div class="blockquote">
        <blockquote class="blockquote">
          <p>Special self-evaluating literal used in lambda parameter lists
before optional parameters.
</p>
        </blockquote>
      </div>
      <p class="synopsis" kind="Constant"><span class="kind">Constant</span><span class="ignore">: </span><a id="idm139667877536560" class="indexterm"/> <code class="varname">#!rest</code></p>
      <div class="blockquote">
        <blockquote class="blockquote">
          <p>Special self-evaluating literal used in lambda parameter lists
before the rest parameter.
</p>
        </blockquote>
      </div>
      <p class="synopsis" kind="Constant"><span class="kind">Constant</span><span class="ignore">: </span><a id="idm139667877533520" class="indexterm"/> <code class="varname">#!key</code></p>
      <div class="blockquote">
        <blockquote class="blockquote">
          <p>Special self-evaluating literal used in lambda parameter lists
before keyword parameters.
</p>
        </blockquote>
      </div>
      <p class="synopsis" kind="Constant"><span class="kind">Constant</span><span class="ignore">: </span><a id="idm139667877530480" class="indexterm"/> <code class="varname">#!eof</code></p>
      <div class="blockquote">
        <blockquote class="blockquote">
          <p>The end-of-file object.
</p>
          <p>Note that if the Scheme reader sees this literal at top-level,
it is returned literally.  This is indistinguishable from
coming to the end of the input file.  If you do not want to end reading,
but want the actual value of <code class="literal">#!eof</code>, you should quote it.
</p>
        </blockquote>
      </div>
      <p class="synopsis" kind="Constant"><span class="kind">Constant</span><span class="ignore">: </span><a id="idm139667877526432" class="indexterm"/> <code class="varname">#!void</code></p>
      <div class="blockquote">
        <blockquote class="blockquote">
          <p>The void value.  Same as <code class="literal">(values)</code>.
If this is the value of an expression in a read-eval-print loop,
nothing is printed.
</p>
        </blockquote>
      </div>
      <p class="synopsis" kind="Constant"><span class="kind">Constant</span><span class="ignore">: </span><a id="idm139667877522944" class="indexterm"/> <code class="varname">#!null</code></p>
      <div class="blockquote">
        <blockquote class="blockquote">
          <p>The Java <code class="literal">null</code> value.  This is not really a Scheme value,
but is useful when interfacing to low-level Java code.
</p>
        </blockquote>
      </div>
    </section>
    <footer>
      <div class="navfooter">
        <p>
          Up: <a accesskey="u" href="Symbols-and-namespaces.xhtml">Symbols and namespaces</a></p>
        <p>
        Previous: <a accesskey="p" href="Keywords.xhtml">Keywords</a></p>
      </div>
    </footer>
  </body>
</html>
